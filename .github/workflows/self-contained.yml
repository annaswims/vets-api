name: Docker Workflow Example
on: push

jobs:
  container-job:
    env:
      BUNDLE_ENTERPRISE__CONTRIBSYS__COM: ${{ secrets.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
      CI: true
      NODE_EXTRA_CA_CERTS: '/etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem' # Needed for self-hosted runners (cache, upload-artifact)
      RAILS_ENV: test
      TERM: xterm-256color
      DOCKER_IMAGE: ${{ github.sha }}-${{ github.run_id }}${{ github.run_number }}
    runs-on: kmatheny
    # Docker Hub image that `container-job` executes in
    container:
      image: 1986/docker-job-runner:latest
      env:
        DOCKER_HOST: tcp://docker:2376
        DOCKER_TLS_VERIFY: 1
        DOCKER_CERT_PATH: /certs/client
      volumes:
        - docker-certs-client-${{ github.run_id }}:/certs/client:ro

    # Service containers to run with `container-job`
    services:
      dind:
        image: docker:22.06-rc-dind
        env:
          DOCKER_CERT_PATH: /certs
        options: >-
          --privileged
          --network-alias docker
        volumes:
          - docker-certs-ca-${{ github.run_id }}:/certs/ca
          - docker-certs-client-${{ github.run_id }}:/certs/client

    steps:
      - name: Hostname
        run: hostname
      - name: Wait for Docker Host
        run: sleep 5s
      - name: Docker Info
        run: docker info
      - name: Docker Version
        run: docker version
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.3.0
        with:
          node-version: 10.15.1
      - name: Node Version
        run: node --version

      - uses: actions/checkout@v2

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Setup Environment
        run: |
          echo "VETS_API_USER_ID=$(id -u)" >> $GITHUB_ENV
      - name: Setup Docker
        run: |
          docker volume create --name=test_bundle_v2_7_6
          touch /etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem
          cp /etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem config/ca-trust/
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            sidekiq_license=${{ env.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
            userid=${{ env.VETS_API_USER_ID }}
          context: .
          target: development
          push: false
          load: true
          tags: vets-api:${{ env.DOCKER_IMAGE }}

      - name: Setup Database
        run: |
             docker-compose -f docker-compose.test.yml -f  docker-compose.gha.yml -p ${{ env.DOCKER_IMAGE}} \
             run --rm --service-ports --no-TTY vets-api bash \
             -c "RAILS_ENV=test DISABLE_BOOTSNAP=true parallel_test -n 14 -e 'bundle exec rake db:reset'"
      - name: Run Specs
        run: |
             docker-compose -f docker-compose.test.yml -f docker-compose.gha.yml -p ${{ env.DOCKER_IMAGE}} \
             run --rm --service-ports --no-TTY vets-api bash \
             -c "DISABLE_BOOTSNAP=true bundle exec parallel_rspec spec/ modules/ -n 14 -o '--color --tty'"
